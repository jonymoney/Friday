// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  googleTokens Json?
  createdAt    DateTime      @default(now())
  contexts     UserContext[]
  profile      UserProfile?
}

model UserProfile {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserContext {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  source    String   // e.g., "google_calendar", "manual", "email"
  sourceId  String?  // External ID from the source (e.g., Google Calendar event ID)
  content   String
  embedding Json?    // Store embedding as JSON array until pgvector is available
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([userId, source, sourceId], name: "unique_source_item")
  @@index([userId])
  @@index([source, sourceId])
}
